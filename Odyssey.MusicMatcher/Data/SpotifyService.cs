//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"
#pragma warning disable 8604 // Disable "CS8604 Possible null reference argument for parameter"
#pragma warning disable 8625 // Disable "CS8625 Cannot convert null literal to non-nullable reference type"

namespace SpotifyWeb
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SpotifyService 
    {
    #pragma warning disable 8618 // Set by constructor via BaseUrl property
        private string _baseUrl;
    #pragma warning restore 8618 // Set by constructor via BaseUrl property
        private System.Net.Http.HttpClient _httpClient;
        private static System.Lazy<System.Text.Json.JsonSerializerOptions> _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings, true);

        public SpotifyService(System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = "https://spotify-demo-api-fe224840a08c.herokuapp.com/v1";
            _httpClient = httpClient;
        }

        private static System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set
            {
                _baseUrl = value;
                if (!string.IsNullOrEmpty(_baseUrl) && !_baseUrl.EndsWith("/"))
                    _baseUrl += '/';
            }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        static partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <remarks>
        /// Get a list of Spotify featured playlists (shown, for example, on a Spotify player's 'Browse' tab).
        /// </remarks>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<FeaturedPlaylists> GetFeaturedPlaylistsAsync()
        {
            return GetFeaturedPlaylistsAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <remarks>
        /// Get a list of Spotify featured playlists (shown, for example, on a Spotify player's 'Browse' tab).
        /// </remarks>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<FeaturedPlaylists> GetFeaturedPlaylistsAsync(System.Threading.CancellationToken cancellationToken)
        {
            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    var urlBuilder_ = new System.Text.StringBuilder();
                    if (!string.IsNullOrEmpty(BaseUrl)) urlBuilder_.Append(BaseUrl);
                    // Operation Path: "browse/featured-playlists"
                    urlBuilder_.Append("browse/featured-playlists");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
                        foreach (var item_ in response_.Headers)
                            headers_[item_.Key] = item_.Value;
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<FeaturedPlaylists>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <remarks>
        /// Get a playlist owned by a Spotify user.
        /// </remarks>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<Playlist> GetPlaylistAsync(string playlist_id)
        {
            return GetPlaylistAsync(playlist_id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <remarks>
        /// Get a playlist owned by a Spotify user.
        /// </remarks>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<Playlist> GetPlaylistAsync(string playlist_id, System.Threading.CancellationToken cancellationToken)
        {
            if (playlist_id == null)
                throw new System.ArgumentNullException("playlist_id");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    var urlBuilder_ = new System.Text.StringBuilder();
                    if (!string.IsNullOrEmpty(BaseUrl)) urlBuilder_.Append(BaseUrl);
                    // Operation Path: "playlists/{playlist_id}"
                    urlBuilder_.Append("playlists/");
                    urlBuilder_.Append(System.Uri.EscapeDataString(ConvertToString(playlist_id, System.Globalization.CultureInfo.InvariantCulture)));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
                        foreach (var item_ in response_.Headers)
                            headers_[item_.Key] = item_.Value;
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<Playlist>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 404)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<Response>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<Response>("The requested resource cannot be found.\n", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <remarks>
        /// Get full details of the items of a playlist owned by a Spotify user.
        /// </remarks>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<PaginatedOfPlaylistTrack> GetPlaylistsTracksAsync(string playlist_id)
        {
            return GetPlaylistsTracksAsync(playlist_id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <remarks>
        /// Get full details of the items of a playlist owned by a Spotify user.
        /// </remarks>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<PaginatedOfPlaylistTrack> GetPlaylistsTracksAsync(string playlist_id, System.Threading.CancellationToken cancellationToken)
        {
            if (playlist_id == null)
                throw new System.ArgumentNullException("playlist_id");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    var urlBuilder_ = new System.Text.StringBuilder();
                    if (!string.IsNullOrEmpty(BaseUrl)) urlBuilder_.Append(BaseUrl);
                    // Operation Path: "playlists/{playlist_id}/tracks"
                    urlBuilder_.Append("playlists/");
                    urlBuilder_.Append(System.Uri.EscapeDataString(ConvertToString(playlist_id, System.Globalization.CultureInfo.InvariantCulture)));
                    urlBuilder_.Append("/tracks");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
                        foreach (var item_ in response_.Headers)
                            headers_[item_.Key] = item_.Value;
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<PaginatedOfPlaylistTrack>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 404)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<Response>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<Response>("The requested resource cannot be found.\n", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <remarks>
        /// Add one or more items to a user's playlist.
        /// </remarks>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<Snapshot> AddTracksToPlaylistAsync(string playlist_id, int? position, string uris)
        {
            return AddTracksToPlaylistAsync(playlist_id, position, uris, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <remarks>
        /// Add one or more items to a user's playlist.
        /// </remarks>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<Snapshot> AddTracksToPlaylistAsync(string playlist_id, int? position, string uris, System.Threading.CancellationToken cancellationToken)
        {
            if (playlist_id == null)
                throw new System.ArgumentNullException("playlist_id");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Content = new System.Net.Http.StringContent(string.Empty, System.Text.Encoding.UTF8, "application/json");
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    var urlBuilder_ = new System.Text.StringBuilder();
                    if (!string.IsNullOrEmpty(BaseUrl)) urlBuilder_.Append(BaseUrl);
                    // Operation Path: "playlists/{playlist_id}/tracks"
                    urlBuilder_.Append("playlists/");
                    urlBuilder_.Append(System.Uri.EscapeDataString(ConvertToString(playlist_id, System.Globalization.CultureInfo.InvariantCulture)));
                    urlBuilder_.Append("/tracks");
            urlBuilder_.Append('?');
            if (position != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("position")).Append('=').Append(System.Uri.EscapeDataString(ConvertToString(position, System.Globalization.CultureInfo.InvariantCulture))).Append('&');
            }
            if (uris != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("uris")).Append('=').Append(System.Uri.EscapeDataString(ConvertToString(uris, System.Globalization.CultureInfo.InvariantCulture))).Append('&');
            }
            urlBuilder_.Length--;

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
                        foreach (var item_ in response_.Headers)
                            headers_[item_.Key] = item_.Value;
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 201)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<Snapshot>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 404)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<Response>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<Response>("The requested resource cannot be found.\n", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Search for Item
        /// </summary>
        /// <remarks>
        /// Get Spotify catalog information about albums, artists, playlists, tracks, shows, episodes or audiobooks
        /// <br/>that match a keyword string.&lt;br /&gt;
        /// <br/>**Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.**
        /// </remarks>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<SearchResults> SearchAsync(string q, System.Collections.Generic.IEnumerable<SearchType> type, int? limit, int? offset, Include_external? include_external)
        {
            return SearchAsync(q, type, limit, offset, include_external, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Search for Item
        /// </summary>
        /// <remarks>
        /// Get Spotify catalog information about albums, artists, playlists, tracks, shows, episodes or audiobooks
        /// <br/>that match a keyword string.&lt;br /&gt;
        /// <br/>**Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.**
        /// </remarks>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<SearchResults> SearchAsync(string q, System.Collections.Generic.IEnumerable<SearchType> type, int? limit, int? offset, Include_external? include_external, System.Threading.CancellationToken cancellationToken)
        {
            if (q == null)
                throw new System.ArgumentNullException("q");

            if (type == null)
                throw new System.ArgumentNullException("type");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    var urlBuilder_ = new System.Text.StringBuilder();
                    if (!string.IsNullOrEmpty(BaseUrl)) urlBuilder_.Append(BaseUrl);
                    // Operation Path: "search"
                    urlBuilder_.Append("search");
            urlBuilder_.Append('?');
            urlBuilder_.Append(System.Uri.EscapeDataString("q")).Append('=').Append(System.Uri.EscapeDataString(ConvertToString(q, System.Globalization.CultureInfo.InvariantCulture))).Append('&');
            foreach (var item_ in type) { urlBuilder_.Append(System.Uri.EscapeDataString("type")).Append('=').Append(System.Uri.EscapeDataString(ConvertToString(item_, System.Globalization.CultureInfo.InvariantCulture))).Append('&'); }
            if (limit != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("limit")).Append('=').Append(System.Uri.EscapeDataString(ConvertToString(limit, System.Globalization.CultureInfo.InvariantCulture))).Append('&');
            }
            if (offset != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("offset")).Append('=').Append(System.Uri.EscapeDataString(ConvertToString(offset, System.Globalization.CultureInfo.InvariantCulture))).Append('&');
            }
            if (include_external != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("include_external")).Append('=').Append(System.Uri.EscapeDataString(ConvertToString(include_external, System.Globalization.CultureInfo.InvariantCulture))).Append('&');
            }
            urlBuilder_.Length--;

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
                        foreach (var item_ in response_.Headers)
                            headers_[item_.Key] = item_.Value;
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<SearchResults>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute)) 
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool) 
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[]) value);
            }
            else if (value is string[])
            {
                return string.Join(",", (string[])value);
            }
            else if (value.GetType().IsArray)
            {
                var valueArray = (System.Array)value;
                var valueTextArray = new string[valueArray.Length];
                for (var i = 0; i < valueArray.Length; i++)
                {
                    valueTextArray[i] = ConvertToString(valueArray.GetValue(i), cultureInfo);
                }
                return string.Join(",", valueTextArray);
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum HTTPMethod
    {

        [System.Runtime.Serialization.EnumMember(Value = @"DELETE")]
        DELETE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"GET")]
        GET = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"POST")]
        POST = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"PUT")]
        PUT = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AuthenticationError
    {

        [System.Text.Json.Serialization.JsonPropertyName("error")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Error { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("error_description")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Error_description { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RegularError
    {

        [System.Text.Json.Serialization.JsonPropertyName("error")]
        [System.ComponentModel.DataAnnotations.Required]
        public Error Error { get; set; } = new Error();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Actions
    {

        [System.Text.Json.Serialization.JsonPropertyName("disallows")]
        [System.ComponentModel.DataAnnotations.Required]
        public Disallows Disallows { get; set; } = new Disallows();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Disallows
    {

        [System.Text.Json.Serialization.JsonPropertyName("interrupting_playback")]
        public bool Interrupting_playback { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("pausing")]
        public bool Pausing { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("resuming")]
        public bool Resuming { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("seeking")]
        public bool Seeking { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("skipping_next")]
        public bool Skipping_next { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("skipping_prev")]
        public bool Skipping_prev { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("toggling_repeat_context")]
        public bool Toggling_repeat_context { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("toggling_shuffle")]
        public bool Toggling_shuffle { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("toggling_repeat_track")]
        public bool Toggling_repeat_track { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("transferring_playback")]
        public bool Transferring_playback { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Album
    {

        [System.Text.Json.Serialization.JsonPropertyName("album_type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public AlbumType Album_type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("artists")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<ArtistSimplified> Artists { get; set; } = new System.Collections.ObjectModel.Collection<ArtistSimplified>();

        [System.Text.Json.Serialization.JsonPropertyName("available_markets")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Available_markets { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("copyrights")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Copyright> Copyrights { get; set; } = new System.Collections.ObjectModel.Collection<Copyright>();

        [System.Text.Json.Serialization.JsonPropertyName("external_ids")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalId External_ids { get; set; } = new ExternalId();

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("genres")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Genres { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("images")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Image> Images { get; set; } = new System.Collections.ObjectModel.Collection<Image>();

        [System.Text.Json.Serialization.JsonPropertyName("label")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Label { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("popularity")]
        public double Popularity { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("release_date")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Release_date { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("release_date_precision")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ReleaseDatePrecision Release_date_precision { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("total_tracks")]
        public double Total_tracks { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public PaginatedOfTrackSimplified Tracks { get; set; } = new PaginatedOfTrackSimplified();

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AlbumType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"album")]
        Album = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"compilation")]
        Compilation = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"single")]
        Single = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ArtistSimplified
    {

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ExternalUrl
    {

        [System.Text.Json.Serialization.JsonPropertyName("spotify")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Spotify { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Copyright
    {

        [System.Text.Json.Serialization.JsonPropertyName("text")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Text { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CopyrightType Type { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum CopyrightType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"C")]
        C = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"P")]
        P = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ExternalId : System.Collections.Generic.Dictionary<string, string>
    {

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Image
    {

        [System.Text.Json.Serialization.JsonPropertyName("url")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Url { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("height")]
        public double Height { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("width")]
        public double Width { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ReleaseDatePrecision
    {

        [System.Runtime.Serialization.EnumMember(Value = @"day")]
        Day = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"month")]
        Month = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"year")]
        Year = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaginatedOfTrackSimplified
    {

        [System.Text.Json.Serialization.JsonPropertyName("items")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<TrackSimplified> Items { get; set; } = new System.Collections.ObjectModel.Collection<TrackSimplified>();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("next")]
        public string Next { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("previous")]
        public string Previous { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public double Total { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TrackSimplified
    {

        [System.Text.Json.Serialization.JsonPropertyName("artists")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<ArtistSimplified> Artists { get; set; } = new System.Collections.ObjectModel.Collection<ArtistSimplified>();

        [System.Text.Json.Serialization.JsonPropertyName("available_markets")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Available_markets { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("disc_number")]
        public double Disc_number { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("duration_ms")]
        public double Duration_ms { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("explicit")]
        public bool Explicit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("is_local")]
        public bool Is_local { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("is_playable")]
        public bool Is_playable { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("linked_from")]
        public TrackSimplifiedLinkedFrom Linked_from { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("restrictions")]
        public Restrictions Restrictions { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("preview_url")]
        public string Preview_url { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("track_number")]
        public double Track_number { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TrackSimplifiedLinkedFrom
    {

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Restrictions
    {

        [System.Text.Json.Serialization.JsonPropertyName("reason")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public RestrictionsReason Reason { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AlbumSimplified
    {

        [System.Text.Json.Serialization.JsonPropertyName("album_type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public AlbumType Album_type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("artists")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<ArtistSimplified> Artists { get; set; } = new System.Collections.ObjectModel.Collection<ArtistSimplified>();

        [System.Text.Json.Serialization.JsonPropertyName("available_markets")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Available_markets { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("images")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Image> Images { get; set; } = new System.Collections.ObjectModel.Collection<Image>();

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("release_date")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Release_date { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("release_date_precision")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ReleaseDatePrecision Release_date_precision { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("restrictions")]
        public Restrictions Restrictions { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("total_tracks")]
        public double Total_tracks { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AlbumGroup
    {

        [System.Runtime.Serialization.EnumMember(Value = @"album")]
        Album = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"appears_on")]
        Appears_on = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"compilation")]
        Compilation = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"single")]
        Single = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Artist
    {

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("followers")]
        [System.ComponentModel.DataAnnotations.Required]
        public Followers Followers { get; set; } = new Followers();

        [System.Text.Json.Serialization.JsonPropertyName("genres")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Genres { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("images")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Image> Images { get; set; } = new System.Collections.ObjectModel.Collection<Image>();

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("popularity")]
        public double Popularity { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Followers
    {

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public double Total { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ArtistTopTracks
    {

        [System.Text.Json.Serialization.JsonPropertyName("tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Track> Tracks { get; set; } = new System.Collections.ObjectModel.Collection<Track>();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Track
    {

        [System.Text.Json.Serialization.JsonPropertyName("album")]
        [System.ComponentModel.DataAnnotations.Required]
        public AlbumSimplified Album { get; set; } = new AlbumSimplified();

        [System.Text.Json.Serialization.JsonPropertyName("artists")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<ArtistSimplified> Artists { get; set; } = new System.Collections.ObjectModel.Collection<ArtistSimplified>();

        [System.Text.Json.Serialization.JsonPropertyName("available_markets")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Available_markets { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("disc_number")]
        public double Disc_number { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("duration_ms")]
        public double Duration_ms { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("explicit")]
        public bool Explicit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("external_ids")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalId External_ids { get; set; } = new ExternalId();

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("is_local")]
        public bool Is_local { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("is_playable")]
        public bool Is_playable { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("linked_from")]
        public Track Linked_from { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("popularity")]
        public double Popularity { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("preview_url")]
        public string Preview_url { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("track_number")]
        public double Track_number { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("restrictions")]
        public Restrictions Restrictions { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AuthorizationCodeCredentials
    {

        [System.Text.Json.Serialization.JsonPropertyName("access_token")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Access_token { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("expires_in")]
        public double Expires_in { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("refresh_token")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Refresh_token { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("scope")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Scope { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("token_type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Token_type { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Context
    {

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ContextType Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CurrentlyPlaying
    {

        [System.Text.Json.Serialization.JsonPropertyName("context")]
        [System.ComponentModel.DataAnnotations.Required]
        public Context Context { get; set; } = new Context();

        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]
        public double Timestamp { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("progress_ms")]
        public double Progress_ms { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("is_playing")]
        public bool Is_playing { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("item")]
        public Item Item { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("currently_playing_type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CurrentlyPlayingType Currently_playing_type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("actions")]
        [System.ComponentModel.DataAnnotations.Required]
        public Actions Actions { get; set; } = new Actions();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Episode
    {

        [System.Text.Json.Serialization.JsonPropertyName("audio_preview_url")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Audio_preview_url { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Description { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("duration_ms")]
        public double Duration_ms { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("explicit")]
        public bool Explicit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("html_description")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Html_description { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("images")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Image> Images { get; set; } = new System.Collections.ObjectModel.Collection<Image>();

        [System.Text.Json.Serialization.JsonPropertyName("is_externally_hosted")]
        public bool Is_externally_hosted { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("is_playable")]
        public bool Is_playable { get; set; }

        /// <summary>
        /// The language used in the episode, identified by a  {@link  https://en.wikipedia.org/wiki/ISO_639 ISO 639 }  code.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("language")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Obsolete]
        public string Language { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("languages")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Languages { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("release_date")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Release_date { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("release_date_precision")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ReleaseDatePrecision Release_date_precision { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("resume_point")]
        [System.ComponentModel.DataAnnotations.Required]
        public ResumePoint Resume_point { get; set; } = new ResumePoint();

        [System.Text.Json.Serialization.JsonPropertyName("show")]
        [System.ComponentModel.DataAnnotations.Required]
        public ShowSimplified Show { get; set; } = new ShowSimplified();

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResumePoint
    {

        [System.Text.Json.Serialization.JsonPropertyName("fully_played")]
        public bool Fully_played { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("resume_position_ms")]
        public double Resume_position_ms { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ShowSimplified
    {

        [System.Text.Json.Serialization.JsonPropertyName("available_markets")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Available_markets { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("copyrights")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Copyright> Copyrights { get; set; } = new System.Collections.ObjectModel.Collection<Copyright>();

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Description { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("explicit")]
        public bool Explicit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("html_description")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Html_description { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("images")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Image> Images { get; set; } = new System.Collections.ObjectModel.Collection<Image>();

        [System.Text.Json.Serialization.JsonPropertyName("is_externally_hosted")]
        public bool Is_externally_hosted { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("languages")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Languages { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("media_type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Media_type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("publisher")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Publisher { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("total_episodes")]
        public double Total_episodes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum CurrentlyPlayingType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"track")]
        Track = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"episode")]
        Episode = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"ad")]
        Ad = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"unknown")]
        Unknown = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CurrentUser
    {

        [System.Text.Json.Serialization.JsonPropertyName("country")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Country { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("display_name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Display_name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("email")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Email { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("explicit_content")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExplicitContentSettings Explicit_content { get; set; } = new ExplicitContentSettings();

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("followers")]
        [System.ComponentModel.DataAnnotations.Required]
        public Followers Followers { get; set; } = new Followers();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("images")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Image> Images { get; set; } = new System.Collections.ObjectModel.Collection<Image>();

        [System.Text.Json.Serialization.JsonPropertyName("product")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Product { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ExplicitContentSettings
    {

        [System.Text.Json.Serialization.JsonPropertyName("filter_enabled")]
        public bool Filter_enabled { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("filter_locked")]
        public bool Filter_locked { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Cursors
    {

        [System.Text.Json.Serialization.JsonPropertyName("after")]
        public string After { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("before")]
        public string Before { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Device
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("is_active")]
        public bool Is_active { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("is_private_session")]
        public bool Is_private_session { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("is_restricted")]
        public bool Is_restricted { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("volume_percent")]
        public double Volume_percent { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class EpisodeSimplified
    {

        [System.Text.Json.Serialization.JsonPropertyName("audio_preview_url")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Audio_preview_url { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Description { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("duration_ms")]
        public double Duration_ms { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("explicit")]
        public bool Explicit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("html_description")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Html_description { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("images")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Image> Images { get; set; } = new System.Collections.ObjectModel.Collection<Image>();

        [System.Text.Json.Serialization.JsonPropertyName("is_externally_hosted")]
        public bool Is_externally_hosted { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("is_playable")]
        public bool Is_playable { get; set; }

        /// <summary>
        /// The language used in the episode, identified by a  {@link  https://en.wikipedia.org/wiki/ISO_639 ISO 639 }  code.
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("language")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Obsolete]
        public string Language { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("languages")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Languages { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("release_date")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Release_date { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("release_date_precision")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ReleaseDatePrecision Release_date_precision { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("resume_point")]
        [System.ComponentModel.DataAnnotations.Required]
        public ResumePoint Resume_point { get; set; } = new ResumePoint();

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FeaturedPlaylists
    {

        [System.Text.Json.Serialization.JsonPropertyName("message")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Message { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("playlists")]
        [System.ComponentModel.DataAnnotations.Required]
        public PaginatedOfPlaylistSimplified Playlists { get; set; } = new PaginatedOfPlaylistSimplified();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaginatedOfPlaylistSimplified
    {

        [System.Text.Json.Serialization.JsonPropertyName("items")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<PlaylistSimplified> Items { get; set; } = new System.Collections.ObjectModel.Collection<PlaylistSimplified>();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("next")]
        public string Next { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("previous")]
        public string Previous { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public double Total { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlaylistSimplified
    {

        [System.Text.Json.Serialization.JsonPropertyName("collaborative")]
        public bool Collaborative { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Description { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("images")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Image> Images { get; set; } = new System.Collections.ObjectModel.Collection<Image>();

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("owner")]
        [System.ComponentModel.DataAnnotations.Required]
        public User Owner { get; set; } = new User();

        [System.Text.Json.Serialization.JsonPropertyName("public")]
        public bool Public { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("snapshot_id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Snapshot_id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public PlaylistTracksInformation Tracks { get; set; } = new PlaylistTracksInformation();

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class User
    {

        [System.Text.Json.Serialization.JsonPropertyName("display_name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Display_name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("followers")]
        [System.ComponentModel.DataAnnotations.Required]
        public Followers Followers { get; set; } = new Followers();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("images")]
        public System.Collections.Generic.ICollection<Image> Images { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlaylistTracksInformation
    {

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public double Total { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class NewReleases
    {

        [System.Text.Json.Serialization.JsonPropertyName("albums")]
        [System.ComponentModel.DataAnnotations.Required]
        public PaginatedOfAlbumSimplified Albums { get; set; } = new PaginatedOfAlbumSimplified();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaginatedOfAlbumSimplified
    {

        [System.Text.Json.Serialization.JsonPropertyName("items")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<AlbumSimplified> Items { get; set; } = new System.Collections.ObjectModel.Collection<AlbumSimplified>();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("next")]
        public string Next { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("previous")]
        public string Previous { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public double Total { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlaybackState
    {

        [System.Text.Json.Serialization.JsonPropertyName("device")]
        [System.ComponentModel.DataAnnotations.Required]
        public Device Device { get; set; } = new Device();

        [System.Text.Json.Serialization.JsonPropertyName("repeat_state")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public RepeatMode Repeat_state { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("shuffle_state")]
        public bool Shuffle_state { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("context")]
        public Context2 Context { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]
        public double Timestamp { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("progress_ms")]
        public double Progress_ms { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("is_playing")]
        public bool Is_playing { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("item")]
        public Item2 Item { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("currently_playing_type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CurrentlyPlayingType Currently_playing_type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("actions")]
        [System.ComponentModel.DataAnnotations.Required]
        public Actions Actions { get; set; } = new Actions();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum RepeatMode
    {

        [System.Runtime.Serialization.EnumMember(Value = @"context")]
        Context = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"off")]
        Off = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"track")]
        Track = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlaybackQueue
    {

        [System.Text.Json.Serialization.JsonPropertyName("currently_playing")]
        public Currently_playing Currently_playing { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("queue")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Queue> Queue { get; set; } = new System.Collections.ObjectModel.Collection<Queue>();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlayHistory
    {

        [System.Text.Json.Serialization.JsonPropertyName("track")]
        [System.ComponentModel.DataAnnotations.Required]
        public TrackSimplified Track { get; set; } = new TrackSimplified();

        [System.Text.Json.Serialization.JsonPropertyName("played_at")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Played_at { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("context")]
        [System.ComponentModel.DataAnnotations.Required]
        public Context Context { get; set; } = new Context();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Playlist
    {

        [System.Text.Json.Serialization.JsonPropertyName("collaborative")]
        public bool Collaborative { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Description { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("followers")]
        [System.ComponentModel.DataAnnotations.Required]
        public Followers Followers { get; set; } = new Followers();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("images")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Image> Images { get; set; } = new System.Collections.ObjectModel.Collection<Image>();

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("owner")]
        [System.ComponentModel.DataAnnotations.Required]
        public UserSimplified Owner { get; set; } = new UserSimplified();

        [System.Text.Json.Serialization.JsonPropertyName("public")]
        public bool Public { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("snapshot_id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Snapshot_id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public PaginatedOfPlaylistTrack Tracks { get; set; } = new PaginatedOfPlaylistTrack();

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UserSimplified
    {

        [System.Text.Json.Serialization.JsonPropertyName("display_name")]
        public string Display_name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaginatedOfPlaylistTrack
    {

        [System.Text.Json.Serialization.JsonPropertyName("items")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<PlaylistTrack> Items { get; set; } = new System.Collections.ObjectModel.Collection<PlaylistTrack>();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("next")]
        public string Next { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("previous")]
        public string Previous { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public double Total { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlaylistTrack
    {

        [System.Text.Json.Serialization.JsonPropertyName("added_at")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Added_at { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("added_by")]
        [System.ComponentModel.DataAnnotations.Required]
        public UserSimplified Added_by { get; set; } = new UserSimplified();

        [System.Text.Json.Serialization.JsonPropertyName("is_local")]
        public bool Is_local { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("track")]
        [System.ComponentModel.DataAnnotations.Required]
        public PlaylistTrackItem Track { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("video_thumbnail")]
        [System.ComponentModel.DataAnnotations.Required]
        public Video_thumbnail Video_thumbnail { get; set; } = new Video_thumbnail();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlaylistItem
    {

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlaylistTrackItem
    {

        [System.Text.Json.Serialization.JsonPropertyName("album")]
        [System.ComponentModel.DataAnnotations.Required]
        public AlbumSimplified Album { get; set; } = new AlbumSimplified();

        [System.Text.Json.Serialization.JsonPropertyName("artists")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<ArtistSimplified> Artists { get; set; } = new System.Collections.ObjectModel.Collection<ArtistSimplified>();

        [System.Text.Json.Serialization.JsonPropertyName("available_markets")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Available_markets { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("disc_number")]
        public double Disc_number { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("duration_ms")]
        public double Duration_ms { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("episode")]
        public bool Episode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("explicit")]
        public bool Explicit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("external_ids")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalId External_ids { get; set; } = new ExternalId();

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("is_local")]
        public bool Is_local { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("is_playable")]
        public bool Is_playable { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("linked_from")]
        public Track Linked_from { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("popularity")]
        public double Popularity { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("preview_url")]
        public string Preview_url { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("restrictions")]
        public Restrictions Restrictions { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("track")]
        public bool Track { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("track_number")]
        public double Track_number { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlaylistEpisodeItem
    {

        [System.Text.Json.Serialization.JsonPropertyName("album")]
        [System.ComponentModel.DataAnnotations.Required]
        public PlaylistEpisodeShow Album { get; set; } = new PlaylistEpisodeShow();

        [System.Text.Json.Serialization.JsonPropertyName("artists")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<PlaylistEpisodeArtist> Artists { get; set; } = new System.Collections.ObjectModel.Collection<PlaylistEpisodeArtist>();

        [System.Text.Json.Serialization.JsonPropertyName("available_markets")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Available_markets { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("disc_number")]
        public double Disc_number { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("duration_ms")]
        public double Duration_ms { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("episode")]
        public bool Episode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("explicit")]
        public bool Explicit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("external_ids")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalId External_ids { get; set; } = new ExternalId();

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("is_local")]
        public bool Is_local { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("is_playable")]
        public bool Is_playable { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("popularity")]
        public double Popularity { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("preview_url")]
        public string Preview_url { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("track")]
        public bool Track { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("track_number")]
        public double Track_number { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlaylistEpisodeShow
    {

        [System.Text.Json.Serialization.JsonPropertyName("album_type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public AlbumType Album_type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("artists")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<PlaylistEpisodeArtist> Artists { get; set; } = new System.Collections.ObjectModel.Collection<PlaylistEpisodeArtist>();

        [System.Text.Json.Serialization.JsonPropertyName("available_markets")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Available_markets { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("images")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Image> Images { get; set; } = new System.Collections.ObjectModel.Collection<Image>();

        [System.Text.Json.Serialization.JsonPropertyName("is_playable")]
        public bool Is_playable { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("release_date")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Release_date { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("release_date_precision")]
        public Release_date_precision Release_date_precision { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("restrictions")]
        [System.ComponentModel.DataAnnotations.Required]
        public Restrictions Restrictions { get; set; } = new Restrictions();

        [System.Text.Json.Serialization.JsonPropertyName("total_tracks")]
        public double Total_tracks { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlaylistEpisodeArtist
    {

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Recommendations
    {

        [System.Text.Json.Serialization.JsonPropertyName("seeds")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<RecommendationSeed> Seeds { get; set; } = new System.Collections.ObjectModel.Collection<RecommendationSeed>();

        [System.Text.Json.Serialization.JsonPropertyName("tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Track> Tracks { get; set; } = new System.Collections.ObjectModel.Collection<Track>();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RecommendationSeed
    {

        [System.Text.Json.Serialization.JsonPropertyName("afterFilteringSize")]
        public double AfterFilteringSize { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("afterRelinkingSize")]
        public double AfterRelinkingSize { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("initialPoolSize")]
        public double InitialPoolSize { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public RecommendationSeedType Type { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SavedAlbum
    {

        [System.Text.Json.Serialization.JsonPropertyName("added_at")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Added_at { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("album")]
        [System.ComponentModel.DataAnnotations.Required]
        public Album Album { get; set; } = new Album();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SavedEpisode
    {

        [System.Text.Json.Serialization.JsonPropertyName("added_at")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Added_at { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("episode")]
        [System.ComponentModel.DataAnnotations.Required]
        public Episode Episode { get; set; } = new Episode();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SavedShow
    {

        [System.Text.Json.Serialization.JsonPropertyName("added_at")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Added_at { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("show")]
        [System.ComponentModel.DataAnnotations.Required]
        public Show Show { get; set; } = new Show();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Show
    {

        [System.Text.Json.Serialization.JsonPropertyName("available_markets")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Available_markets { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("copyrights")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Copyright> Copyrights { get; set; } = new System.Collections.ObjectModel.Collection<Copyright>();

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Description { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("episodes")]
        [System.ComponentModel.DataAnnotations.Required]
        public PaginatedOfEpisodeSimplified Episodes { get; set; } = new PaginatedOfEpisodeSimplified();

        [System.Text.Json.Serialization.JsonPropertyName("explicit")]
        public bool Explicit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("external_urls")]
        [System.ComponentModel.DataAnnotations.Required]
        public ExternalUrl External_urls { get; set; } = new ExternalUrl();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("html_description")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Html_description { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("images")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Image> Images { get; set; } = new System.Collections.ObjectModel.Collection<Image>();

        [System.Text.Json.Serialization.JsonPropertyName("is_externally_hosted")]
        public bool Is_externally_hosted { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("languages")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Languages { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("media_type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Media_type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("publisher")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Publisher { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("total_episodes")]
        public double Total_episodes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaginatedOfEpisodeSimplified
    {

        [System.Text.Json.Serialization.JsonPropertyName("items")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<EpisodeSimplified> Items { get; set; } = new System.Collections.ObjectModel.Collection<EpisodeSimplified>();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("next")]
        public string Next { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("previous")]
        public string Previous { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public double Total { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SavedTrack
    {

        [System.Text.Json.Serialization.JsonPropertyName("added_at")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Added_at { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("track")]
        [System.ComponentModel.DataAnnotations.Required]
        public Track Track { get; set; } = new Track();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SearchResults
    {

        [System.Text.Json.Serialization.JsonPropertyName("albums")]
        public PaginatedOfAlbumSimplified Albums { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("artists")]
        public PaginatedOfArtist Artists { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("episodes")]
        public PaginatedOfEpisodeSimplified Episodes { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("playlists")]
        public PaginatedOfPlaylistSimplified Playlists { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("tracks")]
        public PaginatedOfTrack Tracks { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("shows")]
        public PaginatedOfShowSimplified Shows { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Snapshot
    {

        [System.Text.Json.Serialization.JsonPropertyName("snapshot_id")]
        public string Snapshot_id { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaginatedOfArtist
    {

        [System.Text.Json.Serialization.JsonPropertyName("items")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Artist> Items { get; set; } = new System.Collections.ObjectModel.Collection<Artist>();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("next")]
        public string Next { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("previous")]
        public string Previous { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public double Total { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaginatedOfTrack
    {

        [System.Text.Json.Serialization.JsonPropertyName("items")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Track> Items { get; set; } = new System.Collections.ObjectModel.Collection<Track>();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("next")]
        public string Next { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("previous")]
        public string Previous { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public double Total { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaginatedOfShowSimplified
    {

        [System.Text.Json.Serialization.JsonPropertyName("items")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<ShowSimplified> Items { get; set; } = new System.Collections.ObjectModel.Collection<ShowSimplified>();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("next")]
        public string Next { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("previous")]
        public string Previous { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public double Total { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TrackAudioFeatures
    {

        [System.Text.Json.Serialization.JsonPropertyName("acousticness")]
        public double Acousticness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("analysis_url")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Analysis_url { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("danceability")]
        public double Danceability { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("duration_ms")]
        public double Duration_ms { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("energy")]
        public double Energy { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("instrumentalness")]
        public double Instrumentalness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("key")]
        public double Key { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("liveness")]
        public double Liveness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("loudness")]
        public double Loudness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("mode")]
        public double Mode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("speechiness")]
        public double Speechiness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("tempo")]
        public double Tempo { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("time_signature")]
        public double Time_signature { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("track_href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Track_href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("valence")]
        public double Valence { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DELETE
    {

        [System.Text.Json.Serialization.JsonPropertyName("/playlists/:id/tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public _playlists__id_tracks _playlists__id_tracks { get; set; } = new _playlists__id_tracks();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class POST
    {

        [System.Text.Json.Serialization.JsonPropertyName("/playlists/:id/tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public _playlists__id_tracks2 _playlists__id_tracks { get; set; } = new _playlists__id_tracks2();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GET
    {

        [System.Text.Json.Serialization.JsonPropertyName("/albums")]
        [System.ComponentModel.DataAnnotations.Required]
        public ListOf_albums_AndAlbum _albums { get; set; } = new ListOf_albums_AndAlbum();

        [System.Text.Json.Serialization.JsonPropertyName("/albums/:id")]
        [System.ComponentModel.DataAnnotations.Required]
        public Album _albums__id { get; set; } = new Album();

        [System.Text.Json.Serialization.JsonPropertyName("/albums/:id/tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public PaginatedOfTrackSimplified _albums__id_tracks { get; set; } = new PaginatedOfTrackSimplified();

        [System.Text.Json.Serialization.JsonPropertyName("/artists")]
        [System.ComponentModel.DataAnnotations.Required]
        public ListOf_artists_AndArtist _artists { get; set; } = new ListOf_artists_AndArtist();

        [System.Text.Json.Serialization.JsonPropertyName("/artists/:id")]
        [System.ComponentModel.DataAnnotations.Required]
        public Artist _artists__id { get; set; } = new Artist();

        [System.Text.Json.Serialization.JsonPropertyName("/artists/:id/albums")]
        [System.ComponentModel.DataAnnotations.Required]
        public PaginatedOfAlbumSimplified _artists__id_albums { get; set; } = new PaginatedOfAlbumSimplified();

        [System.Text.Json.Serialization.JsonPropertyName("/artists/:id/related-artists")]
        [System.ComponentModel.DataAnnotations.Required]
        public ListOf_artists_AndArtist _artists__id_relatedArtists { get; set; } = new ListOf_artists_AndArtist();

        [System.Text.Json.Serialization.JsonPropertyName("/artists/:id/top-tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public ArtistTopTracks _artists__id_topTracks { get; set; } = new ArtistTopTracks();

        [System.Text.Json.Serialization.JsonPropertyName("/audio-features")]
        [System.ComponentModel.DataAnnotations.Required]
        public ListOf_audio_features_AndTrackAudioFeatures _audioFeatures { get; set; } = new ListOf_audio_features_AndTrackAudioFeatures();

        [System.Text.Json.Serialization.JsonPropertyName("/audio-features/:id")]
        [System.ComponentModel.DataAnnotations.Required]
        public TrackAudioFeatures _audioFeatures__id { get; set; } = new TrackAudioFeatures();

        [System.Text.Json.Serialization.JsonPropertyName("/authorize")]
        public _authorize _authorize { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("/api/token")]
        [System.ComponentModel.DataAnnotations.Required]
        public AuthorizationCodeCredentials _api_token { get; set; } = new AuthorizationCodeCredentials();

        [System.Text.Json.Serialization.JsonPropertyName("/browse/featured-playlists")]
        [System.ComponentModel.DataAnnotations.Required]
        public FeaturedPlaylists _browse_featuredPlaylists { get; set; } = new FeaturedPlaylists();

        [System.Text.Json.Serialization.JsonPropertyName("/browse/new-releases")]
        [System.ComponentModel.DataAnnotations.Required]
        public NewReleases _browse_newReleases { get; set; } = new NewReleases();

        [System.Text.Json.Serialization.JsonPropertyName("/episodes")]
        [System.ComponentModel.DataAnnotations.Required]
        public ListOf_episodes_AndEpisode _episodes { get; set; } = new ListOf_episodes_AndEpisode();

        [System.Text.Json.Serialization.JsonPropertyName("/episodes/:id")]
        [System.ComponentModel.DataAnnotations.Required]
        public Episode _episodes__id { get; set; } = new Episode();

        [System.Text.Json.Serialization.JsonPropertyName("/me")]
        [System.ComponentModel.DataAnnotations.Required]
        public CurrentUser _me { get; set; } = new CurrentUser();

        [System.Text.Json.Serialization.JsonPropertyName("/me/albums")]
        [System.ComponentModel.DataAnnotations.Required]
        public PaginatedOfSavedAlbum _me_albums { get; set; } = new PaginatedOfSavedAlbum();

        [System.Text.Json.Serialization.JsonPropertyName("/me/albums/contains")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<bool> _me_albums_contains { get; set; } = new System.Collections.ObjectModel.Collection<bool>();

        [System.Text.Json.Serialization.JsonPropertyName("/me/episodes")]
        [System.ComponentModel.DataAnnotations.Required]
        public PaginatedOfSavedEpisode _me_episodes { get; set; } = new PaginatedOfSavedEpisode();

        [System.Text.Json.Serialization.JsonPropertyName("/me/episodes/contains")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<bool> _me_episodes_contains { get; set; } = new System.Collections.ObjectModel.Collection<bool>();

        [System.Text.Json.Serialization.JsonPropertyName("/me/following")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_following _me_following { get; set; } = new _me_following();

        [System.Text.Json.Serialization.JsonPropertyName("/me/following/contains")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<bool> _me_following_contains { get; set; } = new System.Collections.ObjectModel.Collection<bool>();

        [System.Text.Json.Serialization.JsonPropertyName("/me/player")]
        [System.ComponentModel.DataAnnotations.Required]
        public PlaybackState _me_player { get; set; } = new PlaybackState();

        [System.Text.Json.Serialization.JsonPropertyName("/me/player/currently-playing")]
        [System.ComponentModel.DataAnnotations.Required]
        public CurrentlyPlaying _me_player_currentlyPlaying { get; set; } = new CurrentlyPlaying();

        [System.Text.Json.Serialization.JsonPropertyName("/me/player/devices")]
        [System.ComponentModel.DataAnnotations.Required]
        public ListOf_devices_AndDevice _me_player_devices { get; set; } = new ListOf_devices_AndDevice();

        [System.Text.Json.Serialization.JsonPropertyName("/me/player/queue")]
        [System.ComponentModel.DataAnnotations.Required]
        public PlaybackQueue _me_player_queue { get; set; } = new PlaybackQueue();

        [System.Text.Json.Serialization.JsonPropertyName("/me/player/recently-played")]
        [System.ComponentModel.DataAnnotations.Required]
        public PaginatedCursorBasedOfPlayHistory _me_player_recentlyPlayed { get; set; } = new PaginatedCursorBasedOfPlayHistory();

        [System.Text.Json.Serialization.JsonPropertyName("/me/playlists")]
        [System.ComponentModel.DataAnnotations.Required]
        public PaginatedOfPlaylist _me_playlists { get; set; } = new PaginatedOfPlaylist();

        [System.Text.Json.Serialization.JsonPropertyName("/me/shows")]
        [System.ComponentModel.DataAnnotations.Required]
        public PaginatedOfSavedShow _me_shows { get; set; } = new PaginatedOfSavedShow();

        [System.Text.Json.Serialization.JsonPropertyName("/me/shows/contains")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<bool> _me_shows_contains { get; set; } = new System.Collections.ObjectModel.Collection<bool>();

        [System.Text.Json.Serialization.JsonPropertyName("/me/top/artists")]
        [System.ComponentModel.DataAnnotations.Required]
        public PaginatedOfArtist _me_top_artists { get; set; } = new PaginatedOfArtist();

        [System.Text.Json.Serialization.JsonPropertyName("/me/top/tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public PaginatedOfTrack _me_top_tracks { get; set; } = new PaginatedOfTrack();

        [System.Text.Json.Serialization.JsonPropertyName("/me/tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public PaginatedOfSavedTrack _me_tracks { get; set; } = new PaginatedOfSavedTrack();

        [System.Text.Json.Serialization.JsonPropertyName("/me/tracks/contains")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<bool> _me_tracks_contains { get; set; } = new System.Collections.ObjectModel.Collection<bool>();

        [System.Text.Json.Serialization.JsonPropertyName("/playlists/:id")]
        [System.ComponentModel.DataAnnotations.Required]
        public Playlist _playlists__id { get; set; } = new Playlist();

        [System.Text.Json.Serialization.JsonPropertyName("/playlists/:id/followers/contains")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<bool> _playlists__id_followers_contains { get; set; } = new System.Collections.ObjectModel.Collection<bool>();

        [System.Text.Json.Serialization.JsonPropertyName("/playlists/:id/tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public PaginatedOfPlaylistTrack _playlists__id_tracks { get; set; } = new PaginatedOfPlaylistTrack();

        [System.Text.Json.Serialization.JsonPropertyName("/recommendations")]
        [System.ComponentModel.DataAnnotations.Required]
        public Recommendations _recommendations { get; set; } = new Recommendations();

        [System.Text.Json.Serialization.JsonPropertyName("/recommendations/available-genre-seeds")]
        [System.ComponentModel.DataAnnotations.Required]
        public ListOf_genres_AndString _recommendations_availableGenreSeeds { get; set; } = new ListOf_genres_AndString();

        [System.Text.Json.Serialization.JsonPropertyName("/search")]
        [System.ComponentModel.DataAnnotations.Required]
        public SearchResults _search { get; set; } = new SearchResults();

        [System.Text.Json.Serialization.JsonPropertyName("/shows")]
        [System.ComponentModel.DataAnnotations.Required]
        public ListOf_shows_AndShow _shows { get; set; } = new ListOf_shows_AndShow();

        [System.Text.Json.Serialization.JsonPropertyName("/shows/:id")]
        [System.ComponentModel.DataAnnotations.Required]
        public Show _shows__id { get; set; } = new Show();

        [System.Text.Json.Serialization.JsonPropertyName("/shows/:id/episodes")]
        [System.ComponentModel.DataAnnotations.Required]
        public PaginatedOfEpisodeSimplified _shows__id_episodes { get; set; } = new PaginatedOfEpisodeSimplified();

        [System.Text.Json.Serialization.JsonPropertyName("/tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public ListOf_tracks_AndTrack _tracks { get; set; } = new ListOf_tracks_AndTrack();

        [System.Text.Json.Serialization.JsonPropertyName("/tracks/:id")]
        [System.ComponentModel.DataAnnotations.Required]
        public Track _tracks__id { get; set; } = new Track();

        [System.Text.Json.Serialization.JsonPropertyName("/users/:id")]
        [System.ComponentModel.DataAnnotations.Required]
        public User _users__id { get; set; } = new User();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ListOf_albums_AndAlbum
    {

        [System.Text.Json.Serialization.JsonPropertyName("albums")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Album> Albums { get; set; } = new System.Collections.ObjectModel.Collection<Album>();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ListOf_artists_AndArtist
    {

        [System.Text.Json.Serialization.JsonPropertyName("artists")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Artist> Artists { get; set; } = new System.Collections.ObjectModel.Collection<Artist>();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ListOf_audio_features_AndTrackAudioFeatures
    {

        [System.Text.Json.Serialization.JsonPropertyName("audio_features")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<TrackAudioFeatures> Audio_features { get; set; } = new System.Collections.ObjectModel.Collection<TrackAudioFeatures>();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ListOf_episodes_AndEpisode
    {

        [System.Text.Json.Serialization.JsonPropertyName("episodes")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Episode> Episodes { get; set; } = new System.Collections.ObjectModel.Collection<Episode>();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaginatedOfSavedAlbum
    {

        [System.Text.Json.Serialization.JsonPropertyName("items")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<SavedAlbum> Items { get; set; } = new System.Collections.ObjectModel.Collection<SavedAlbum>();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("next")]
        public string Next { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("previous")]
        public string Previous { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public double Total { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaginatedOfSavedEpisode
    {

        [System.Text.Json.Serialization.JsonPropertyName("items")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<SavedEpisode> Items { get; set; } = new System.Collections.ObjectModel.Collection<SavedEpisode>();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("next")]
        public string Next { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("previous")]
        public string Previous { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public double Total { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaginatedCursorBasedOfArtist
    {

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("items")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Artist> Items { get; set; } = new System.Collections.ObjectModel.Collection<Artist>();

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("next")]
        public string Next { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("cursors")]
        [System.ComponentModel.DataAnnotations.Required]
        public Cursors Cursors { get; set; } = new Cursors();

        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public double Total { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ListOf_devices_AndDevice
    {

        [System.Text.Json.Serialization.JsonPropertyName("devices")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Device> Devices { get; set; } = new System.Collections.ObjectModel.Collection<Device>();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaginatedCursorBasedOfPlayHistory
    {

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("items")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<PlayHistory> Items { get; set; } = new System.Collections.ObjectModel.Collection<PlayHistory>();

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("next")]
        public string Next { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("cursors")]
        [System.ComponentModel.DataAnnotations.Required]
        public Cursors Cursors { get; set; } = new Cursors();

        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public double Total { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaginatedOfPlaylist
    {

        [System.Text.Json.Serialization.JsonPropertyName("items")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Playlist> Items { get; set; } = new System.Collections.ObjectModel.Collection<Playlist>();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("next")]
        public string Next { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("previous")]
        public string Previous { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public double Total { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaginatedOfSavedShow
    {

        [System.Text.Json.Serialization.JsonPropertyName("items")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<SavedShow> Items { get; set; } = new System.Collections.ObjectModel.Collection<SavedShow>();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("next")]
        public string Next { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("previous")]
        public string Previous { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public double Total { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaginatedOfSavedTrack
    {

        [System.Text.Json.Serialization.JsonPropertyName("items")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<SavedTrack> Items { get; set; } = new System.Collections.ObjectModel.Collection<SavedTrack>();

        [System.Text.Json.Serialization.JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("next")]
        public string Next { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("previous")]
        public string Previous { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public double Total { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ListOf_genres_AndString
    {

        [System.Text.Json.Serialization.JsonPropertyName("genres")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Genres { get; set; } = new System.Collections.ObjectModel.Collection<string>();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ListOf_shows_AndShow
    {

        [System.Text.Json.Serialization.JsonPropertyName("shows")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Show> Shows { get; set; } = new System.Collections.ObjectModel.Collection<Show>();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ListOf_tracks_AndTrack
    {

        [System.Text.Json.Serialization.JsonPropertyName("tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Track> Tracks { get; set; } = new System.Collections.ObjectModel.Collection<Track>();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Paths
    {

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Paths2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"/playlists/:id/tracks")]
        _playlists_Id_tracks = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/albums")]
        _me_albums = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/episodes")]
        _me_episodes = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/following")]
        _me_following = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/player")]
        _me_player = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/player/play")]
        _me_player_play = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"/playlists/:id/followers")]
        _playlists_Id_followers = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/tracks")]
        _me_tracks = 7,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Paths3
    {

        [System.Runtime.Serialization.EnumMember(Value = @"/me/albums")]
        _me_albums = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/episodes")]
        _me_episodes = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/following")]
        _me_following = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/shows")]
        _me_shows = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/tracks")]
        _me_tracks = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"/albums")]
        _albums = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"/albums/:id")]
        _albums_Id = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"/albums/:id/tracks")]
        _albums_Id_tracks = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"/artists")]
        _artists = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"/artists/:id/albums")]
        _artists_Id_albums = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"/artists/:id/top-tracks")]
        _artists_Id_topTracks = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"/audio-features")]
        _audioFeatures = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"/browse/featured-playlists")]
        _browse_featuredPlaylists = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"/browse/new-releases")]
        _browse_newReleases = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"/episodes")]
        _episodes = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"/recommendations")]
        _recommendations = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/albums/contains")]
        _me_albums_contains = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/episodes/contains")]
        _me_episodes_contains = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/following/contains")]
        _me_following_contains = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/shows/contains")]
        _me_shows_contains = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/top/artists")]
        _me_top_artists = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/top/tracks")]
        _me_top_tracks = 21,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/tracks/contains")]
        _me_tracks_contains = 22,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/player")]
        _me_player = 23,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/player/currently-playing")]
        _me_player_currentlyPlaying = 24,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/player/recently-played")]
        _me_player_recentlyPlayed = 25,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/playlists")]
        _me_playlists = 26,

        [System.Runtime.Serialization.EnumMember(Value = @"/playlists/:id/followers/contains")]
        _playlists_Id_followers_contains = 27,

        [System.Runtime.Serialization.EnumMember(Value = @"/playlists/:id/tracks")]
        _playlists_Id_tracks = 28,

        [System.Runtime.Serialization.EnumMember(Value = @"/playlists/:id")]
        _playlists_Id = 29,

        [System.Runtime.Serialization.EnumMember(Value = @"/search")]
        _search = 30,

        [System.Runtime.Serialization.EnumMember(Value = @"/shows")]
        _shows = 31,

        [System.Runtime.Serialization.EnumMember(Value = @"/shows/:id/episodes")]
        _shows_Id_episodes = 32,

        [System.Runtime.Serialization.EnumMember(Value = @"/tracks")]
        _tracks = 33,

        [System.Runtime.Serialization.EnumMember(Value = @"/tracks/:id")]
        _tracks_Id = 34,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/player/pause")]
        _me_player_pause = 35,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/player/play")]
        _me_player_play = 36,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/player/repeat")]
        _me_player_repeat = 37,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/player/seek")]
        _me_player_seek = 38,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/player/shuffle")]
        _me_player_shuffle = 39,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/player/volume")]
        _me_player_volume = 40,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/player/next")]
        _me_player_next = 41,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/player/previous")]
        _me_player_previous = 42,

        [System.Runtime.Serialization.EnumMember(Value = @"/me/player/queue")]
        _me_player_queue = 43,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DELETE2
    {

        [System.Text.Json.Serialization.JsonPropertyName("/me/albums")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_albums _me_albums { get; set; } = new _me_albums();

        [System.Text.Json.Serialization.JsonPropertyName("/me/episodes")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_episodes _me_episodes { get; set; } = new _me_episodes();

        [System.Text.Json.Serialization.JsonPropertyName("/me/following")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_following2 _me_following { get; set; } = new _me_following2();

        [System.Text.Json.Serialization.JsonPropertyName("/me/tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_tracks _me_tracks { get; set; } = new _me_tracks();

        [System.Text.Json.Serialization.JsonPropertyName("/playlists/:id/tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public _playlists__id_tracks3 _playlists__id_tracks { get; set; } = new _playlists__id_tracks3();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class POST2
    {

        [System.Text.Json.Serialization.JsonPropertyName("/playlists/:id/tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public _playlists__id_tracks4 _playlists__id_tracks { get; set; } = new _playlists__id_tracks4();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PUT
    {

        [System.Text.Json.Serialization.JsonPropertyName("/me/albums")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_albums2 _me_albums { get; set; } = new _me_albums2();

        [System.Text.Json.Serialization.JsonPropertyName("/me/episodes")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_episodes2 _me_episodes { get; set; } = new _me_episodes2();

        [System.Text.Json.Serialization.JsonPropertyName("/me/following")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_following3 _me_following { get; set; } = new _me_following3();

        [System.Text.Json.Serialization.JsonPropertyName("/me/player")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_player _me_player { get; set; } = new _me_player();

        [System.Text.Json.Serialization.JsonPropertyName("/me/player/play")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_player_play _me_player_play { get; set; } = new _me_player_play();

        [System.Text.Json.Serialization.JsonPropertyName("/playlists/:id/followers")]
        [System.ComponentModel.DataAnnotations.Required]
        public _playlists__id_followers _playlists__id_followers { get; set; } = new _playlists__id_followers();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DELETE3
    {

        [System.Text.Json.Serialization.JsonPropertyName("/me/albums")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_albums3 _me_albums { get; set; } = new _me_albums3();

        [System.Text.Json.Serialization.JsonPropertyName("/me/episodes")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_episodes3 _me_episodes { get; set; } = new _me_episodes3();

        [System.Text.Json.Serialization.JsonPropertyName("/me/following")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_following4 _me_following { get; set; } = new _me_following4();

        [System.Text.Json.Serialization.JsonPropertyName("/me/shows")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_shows _me_shows { get; set; } = new _me_shows();

        [System.Text.Json.Serialization.JsonPropertyName("/me/tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_tracks2 _me_tracks { get; set; } = new _me_tracks2();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GET2
    {

        [System.Text.Json.Serialization.JsonPropertyName("/albums")]
        [System.ComponentModel.DataAnnotations.Required]
        public _albums _albums { get; set; } = new _albums();

        [System.Text.Json.Serialization.JsonPropertyName("/albums/:id")]
        [System.ComponentModel.DataAnnotations.Required]
        public _albums__id _albums__id { get; set; } = new _albums__id();

        [System.Text.Json.Serialization.JsonPropertyName("/albums/:id/tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public _albums__id_tracks _albums__id_tracks { get; set; } = new _albums__id_tracks();

        [System.Text.Json.Serialization.JsonPropertyName("/artists")]
        [System.ComponentModel.DataAnnotations.Required]
        public _artists _artists { get; set; } = new _artists();

        [System.Text.Json.Serialization.JsonPropertyName("/artists/:id/albums")]
        [System.ComponentModel.DataAnnotations.Required]
        public _artists__id_albums _artists__id_albums { get; set; } = new _artists__id_albums();

        [System.Text.Json.Serialization.JsonPropertyName("/artists/:id/top-tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public _artists__id_topTracks _artists__id_topTracks { get; set; } = new _artists__id_topTracks();

        [System.Text.Json.Serialization.JsonPropertyName("/audio-features")]
        [System.ComponentModel.DataAnnotations.Required]
        public _audioFeatures _audioFeatures { get; set; } = new _audioFeatures();

        [System.Text.Json.Serialization.JsonPropertyName("/browse/featured-playlists")]
        [System.ComponentModel.DataAnnotations.Required]
        public _browse_featuredPlaylists _browse_featuredPlaylists { get; set; } = new _browse_featuredPlaylists();

        [System.Text.Json.Serialization.JsonPropertyName("/browse/new-releases")]
        [System.ComponentModel.DataAnnotations.Required]
        public _browse_newReleases _browse_newReleases { get; set; } = new _browse_newReleases();

        [System.Text.Json.Serialization.JsonPropertyName("/episodes")]
        [System.ComponentModel.DataAnnotations.Required]
        public _episodes _episodes { get; set; } = new _episodes();

        [System.Text.Json.Serialization.JsonPropertyName("/recommendations")]
        [System.ComponentModel.DataAnnotations.Required]
        public _recommendations _recommendations { get; set; } = new _recommendations();

        [System.Text.Json.Serialization.JsonPropertyName("/me/albums")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_albums4 _me_albums { get; set; } = new _me_albums4();

        [System.Text.Json.Serialization.JsonPropertyName("/me/albums/contains")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_albums_contains _me_albums_contains { get; set; } = new _me_albums_contains();

        [System.Text.Json.Serialization.JsonPropertyName("/me/episodes")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_episodes4 _me_episodes { get; set; } = new _me_episodes4();

        [System.Text.Json.Serialization.JsonPropertyName("/me/episodes/contains")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_episodes_contains _me_episodes_contains { get; set; } = new _me_episodes_contains();

        [System.Text.Json.Serialization.JsonPropertyName("/me/following")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_following5 _me_following { get; set; } = new _me_following5();

        [System.Text.Json.Serialization.JsonPropertyName("/me/following/contains")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_following_contains _me_following_contains { get; set; } = new _me_following_contains();

        [System.Text.Json.Serialization.JsonPropertyName("/me/shows")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_shows2 _me_shows { get; set; } = new _me_shows2();

        [System.Text.Json.Serialization.JsonPropertyName("/me/shows/contains")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_shows_contains _me_shows_contains { get; set; } = new _me_shows_contains();

        [System.Text.Json.Serialization.JsonPropertyName("/me/top/artists")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_top_artists _me_top_artists { get; set; } = new _me_top_artists();

        [System.Text.Json.Serialization.JsonPropertyName("/me/top/tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_top_tracks _me_top_tracks { get; set; } = new _me_top_tracks();

        [System.Text.Json.Serialization.JsonPropertyName("/me/tracks/contains")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_tracks_contains _me_tracks_contains { get; set; } = new _me_tracks_contains();

        [System.Text.Json.Serialization.JsonPropertyName("/me/player")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_player2 _me_player { get; set; } = new _me_player2();

        [System.Text.Json.Serialization.JsonPropertyName("/me/player/currently-playing")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_player_currentlyPlaying _me_player_currentlyPlaying { get; set; } = new _me_player_currentlyPlaying();

        [System.Text.Json.Serialization.JsonPropertyName("/me/player/recently-played")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_player_recentlyPlayed _me_player_recentlyPlayed { get; set; } = new _me_player_recentlyPlayed();

        [System.Text.Json.Serialization.JsonPropertyName("/me/playlists")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_playlists _me_playlists { get; set; } = new _me_playlists();

        [System.Text.Json.Serialization.JsonPropertyName("/me/tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_tracks3 _me_tracks { get; set; } = new _me_tracks3();

        [System.Text.Json.Serialization.JsonPropertyName("/playlists/:id/followers/contains")]
        [System.ComponentModel.DataAnnotations.Required]
        public _playlists__id_followers_contains _playlists__id_followers_contains { get; set; } = new _playlists__id_followers_contains();

        [System.Text.Json.Serialization.JsonPropertyName("/playlists/:id/tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public _playlists__id_tracks5 _playlists__id_tracks { get; set; } = new _playlists__id_tracks5();

        [System.Text.Json.Serialization.JsonPropertyName("/playlists/:id")]
        [System.ComponentModel.DataAnnotations.Required]
        public _playlists__id _playlists__id { get; set; } = new _playlists__id();

        [System.Text.Json.Serialization.JsonPropertyName("/search")]
        [System.ComponentModel.DataAnnotations.Required]
        public _search _search { get; set; } = new _search();

        [System.Text.Json.Serialization.JsonPropertyName("/shows")]
        [System.ComponentModel.DataAnnotations.Required]
        public _shows _shows { get; set; } = new _shows();

        [System.Text.Json.Serialization.JsonPropertyName("/shows/:id/episodes")]
        [System.ComponentModel.DataAnnotations.Required]
        public _shows__id_episodes _shows__id_episodes { get; set; } = new _shows__id_episodes();

        [System.Text.Json.Serialization.JsonPropertyName("/tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public _tracks _tracks { get; set; } = new _tracks();

        [System.Text.Json.Serialization.JsonPropertyName("/tracks/:id")]
        [System.ComponentModel.DataAnnotations.Required]
        public _tracks__id _tracks__id { get; set; } = new _tracks__id();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class POST3
    {

        [System.Text.Json.Serialization.JsonPropertyName("/me/player/next")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_player_next _me_player_next { get; set; } = new _me_player_next();

        [System.Text.Json.Serialization.JsonPropertyName("/me/player/previous")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_player_previous _me_player_previous { get; set; } = new _me_player_previous();

        [System.Text.Json.Serialization.JsonPropertyName("/me/player/queue")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_player_queue _me_player_queue { get; set; } = new _me_player_queue();

        [System.Text.Json.Serialization.JsonPropertyName("/playlists/:id/tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public _playlists__id_tracks6 _playlists__id_tracks { get; set; } = new _playlists__id_tracks6();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PUT2
    {

        [System.Text.Json.Serialization.JsonPropertyName("/me/albums")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_albums5 _me_albums { get; set; } = new _me_albums5();

        [System.Text.Json.Serialization.JsonPropertyName("/me/episodes")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_episodes5 _me_episodes { get; set; } = new _me_episodes5();

        [System.Text.Json.Serialization.JsonPropertyName("/me/following")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_following6 _me_following { get; set; } = new _me_following6();

        [System.Text.Json.Serialization.JsonPropertyName("/me/player/pause")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_player_pause _me_player_pause { get; set; } = new _me_player_pause();

        [System.Text.Json.Serialization.JsonPropertyName("/me/player/play")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_player_play2 _me_player_play { get; set; } = new _me_player_play2();

        [System.Text.Json.Serialization.JsonPropertyName("/me/player/repeat")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_player_repeat _me_player_repeat { get; set; } = new _me_player_repeat();

        [System.Text.Json.Serialization.JsonPropertyName("/me/player/seek")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_player_seek _me_player_seek { get; set; } = new _me_player_seek();

        [System.Text.Json.Serialization.JsonPropertyName("/me/player/shuffle")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_player_shuffle _me_player_shuffle { get; set; } = new _me_player_shuffle();

        [System.Text.Json.Serialization.JsonPropertyName("/me/player/volume")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_player_volume _me_player_volume { get; set; } = new _me_player_volume();

        [System.Text.Json.Serialization.JsonPropertyName("/me/shows")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_shows3 _me_shows { get; set; } = new _me_shows3();

        [System.Text.Json.Serialization.JsonPropertyName("/me/tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public _me_tracks4 _me_tracks { get; set; } = new _me_tracks4();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum SearchType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"album")]
        Album = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"artist")]
        Artist = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"playlist")]
        Playlist = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"track")]
        Track = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"show")]
        Show = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"episode")]
        Episode = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"audiobook")]
        Audiobook = 6,

    }

    /// <summary>
    /// If `include_external=audio` is specified it signals that the client can play externally hosted audio content, and marks
    /// <br/>the content as playable in the response. By default externally hosted audio content is marked as unplayable in the response.
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Include_external
    {

        [System.Runtime.Serialization.EnumMember(Value = @"audio")]
        Audio = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response
    {

        [System.Text.Json.Serialization.JsonPropertyName("error")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Error { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error
    {

        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public double Status { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("message")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Message { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("reason")]
        public string Reason { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum RestrictionsReason
    {

        [System.Runtime.Serialization.EnumMember(Value = @"market")]
        Market = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"product")]
        Product = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"explicit")]
        Explicit = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ContextType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"artist")]
        Artist = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"playlist")]
        Playlist = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"album")]
        Album = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"show")]
        Show = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Item
    {

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Context2
    {

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Item2
    {

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Currently_playing
    {

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Queue
    {

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Video_thumbnail
    {

        [System.Text.Json.Serialization.JsonPropertyName("url")]
        public string Url { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Release_date_precision
    {

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum RecommendationSeedType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ARTIST")]
        ARTIST = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"TRACK")]
        TRACK = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"GENRE")]
        GENRE = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _playlists__id_tracks
    {

        [System.Text.Json.Serialization.JsonPropertyName("snapshot_id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Snapshot_id { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _playlists__id_tracks2
    {

        [System.Text.Json.Serialization.JsonPropertyName("snapshot_id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Snapshot_id { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _authorize
    {

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_following
    {

        [System.Text.Json.Serialization.JsonPropertyName("artists")]
        [System.ComponentModel.DataAnnotations.Required]
        public PaginatedCursorBasedOfArtist Artists { get; set; } = new PaginatedCursorBasedOfArtist();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_albums
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        public System.Collections.Generic.ICollection<string> Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_episodes
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        public System.Collections.Generic.ICollection<string> Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_following2
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        public System.Collections.Generic.ICollection<string> Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_tracks
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        public System.Collections.Generic.ICollection<string> Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _playlists__id_tracks3
    {

        [System.Text.Json.Serialization.JsonPropertyName("snapshot_id")]
        public string Snapshot_id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("tracks")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Tracks> Tracks { get; set; } = new System.Collections.ObjectModel.Collection<Tracks>();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _playlists__id_tracks4
    {

        [System.Text.Json.Serialization.JsonPropertyName("uris")]
        public System.Collections.Generic.ICollection<string> Uris { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("position")]
        public double Position { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_albums2
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        public System.Collections.Generic.ICollection<string> Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_episodes2
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        public System.Collections.Generic.ICollection<string> Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_following3
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        public System.Collections.Generic.ICollection<string> Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_player
    {

        [System.Text.Json.Serialization.JsonPropertyName("device_ids")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> Device_ids { get; set; } = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("play")]
        public bool Play { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_player_play
    {

        [System.Text.Json.Serialization.JsonPropertyName("context_uri")]
        public string Context_uri { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uris")]
        public System.Collections.Generic.ICollection<string> Uris { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public Offset Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("position_ms")]
        public double Position_ms { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _playlists__id_followers
    {

        [System.Text.Json.Serialization.JsonPropertyName("public")]
        public bool Public { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_albums3
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_episodes3
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_following4
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public _me_following4Type Type { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_shows
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("market")]
        public string Market { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_tracks2
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _albums
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("market")]
        public string Market { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _albums__id
    {

        [System.Text.Json.Serialization.JsonPropertyName("market")]
        public string Market { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _albums__id_tracks
    {

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("market")]
        public string Market { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _artists
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _artists__id_albums
    {

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("include_groups")]
        public string Include_groups { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _artists__id_topTracks
    {

        [System.Text.Json.Serialization.JsonPropertyName("market")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Market { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _audioFeatures
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _browse_featuredPlaylists
    {

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]
        public string Timestamp { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _browse_newReleases
    {

        [System.Text.Json.Serialization.JsonPropertyName("country")]
        public string Country { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _episodes
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("market")]
        public string Market { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _recommendations
    {

        [System.Text.Json.Serialization.JsonPropertyName("seed_artists")]
        public string Seed_artists { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("seed_genres")]
        public string Seed_genres { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("seed_tracks")]
        public string Seed_tracks { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("max_acousticness")]
        public double Max_acousticness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("max_danceability")]
        public double Max_danceability { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("max_duration_ms")]
        public double Max_duration_ms { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("max_energy")]
        public double Max_energy { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("max_instrumentalness")]
        public double Max_instrumentalness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("max_key")]
        public double Max_key { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("max_liveness")]
        public double Max_liveness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("max_loudness")]
        public double Max_loudness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("max_mode")]
        public double Max_mode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("max_popularity")]
        public double Max_popularity { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("max_speechiness")]
        public double Max_speechiness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("max_tempo")]
        public double Max_tempo { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("max_time_signature")]
        public double Max_time_signature { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("max_valence")]
        public double Max_valence { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("min_acousticness")]
        public double Min_acousticness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("min_danceability")]
        public double Min_danceability { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("min_duration_ms")]
        public double Min_duration_ms { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("min_energy")]
        public double Min_energy { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("min_instrumentalness")]
        public double Min_instrumentalness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("min_key")]
        public double Min_key { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("min_liveness")]
        public double Min_liveness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("min_loudness")]
        public double Min_loudness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("min_mode")]
        public double Min_mode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("min_popularity")]
        public double Min_popularity { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("min_speechiness")]
        public double Min_speechiness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("min_tempo")]
        public double Min_tempo { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("min_time_signature")]
        public double Min_time_signature { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("min_valence")]
        public double Min_valence { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("target_acousticness")]
        public double Target_acousticness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("target_danceability")]
        public double Target_danceability { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("target_duration_ms")]
        public double Target_duration_ms { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("target_energy")]
        public double Target_energy { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("target_instrumentalness")]
        public double Target_instrumentalness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("target_key")]
        public double Target_key { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("target_liveness")]
        public double Target_liveness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("target_loudness")]
        public double Target_loudness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("target_mode")]
        public double Target_mode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("target_popularity")]
        public double Target_popularity { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("target_speechiness")]
        public double Target_speechiness { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("target_tempo")]
        public double Target_tempo { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("target_time_signature")]
        public double Target_time_signature { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("target_valence")]
        public double Target_valence { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_albums4
    {

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_albums_contains
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_episodes4
    {

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("market")]
        public string Market { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_episodes_contains
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_following5
    {

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("after")]
        public string After { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_following_contains
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public _me_following_containsType Type { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_shows2
    {

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_shows_contains
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_top_artists
    {

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("time_range")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public _me_top_artistsTime_range Time_range { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_top_tracks
    {

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("time_range")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public _me_top_tracksTime_range Time_range { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_tracks_contains
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_player2
    {

        [System.Text.Json.Serialization.JsonPropertyName("additional_types")]
        public string Additional_types { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_player_currentlyPlaying
    {

        [System.Text.Json.Serialization.JsonPropertyName("additional_types")]
        public string Additional_types { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_player_recentlyPlayed
    {

        [System.Text.Json.Serialization.JsonPropertyName("after")]
        public double After { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("before")]
        public double Before { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_playlists
    {

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_tracks3
    {

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _playlists__id_followers_contains
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _playlists__id_tracks5
    {

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _playlists__id
    {

        [System.Text.Json.Serialization.JsonPropertyName("additional_types")]
        public string Additional_types { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("fields")]
        public string Fields { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("market")]
        public string Market { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _search
    {

        [System.Text.Json.Serialization.JsonPropertyName("q")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Q { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("include_external")]
        public string Include_external { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("market")]
        public string Market { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _shows
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("market")]
        public string Market { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _shows__id_episodes
    {

        [System.Text.Json.Serialization.JsonPropertyName("limit")]
        public double Limit { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("offset")]
        public double Offset { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _tracks
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("market")]
        public string Market { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _tracks__id
    {

        [System.Text.Json.Serialization.JsonPropertyName("market")]
        public string Market { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_player_next
    {

        [System.Text.Json.Serialization.JsonPropertyName("device_id")]
        public string Device_id { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_player_previous
    {

        [System.Text.Json.Serialization.JsonPropertyName("device_id")]
        public string Device_id { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_player_queue
    {

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("device_id")]
        public string Device_id { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _playlists__id_tracks6
    {

        [System.Text.Json.Serialization.JsonPropertyName("position")]
        public double Position { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uris")]
        public System.Collections.Generic.ICollection<string> Uris { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_albums5
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_episodes5
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_following6
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public _me_following6Type Type { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_player_pause
    {

        [System.Text.Json.Serialization.JsonPropertyName("device_id")]
        public string Device_id { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_player_play2
    {

        [System.Text.Json.Serialization.JsonPropertyName("device_id")]
        public string Device_id { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_player_repeat
    {

        [System.Text.Json.Serialization.JsonPropertyName("state")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public RepeatMode State { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("device_id")]
        public string Device_id { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_player_seek
    {

        [System.Text.Json.Serialization.JsonPropertyName("position_ms")]
        public double Position_ms { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("device_id")]
        public string Device_id { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_player_shuffle
    {

        [System.Text.Json.Serialization.JsonPropertyName("state")]
        public bool State { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("device_id")]
        public string Device_id { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_player_volume
    {

        [System.Text.Json.Serialization.JsonPropertyName("volume_percent")]
        public double Volume_percent { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("device_id")]
        public string Device_id { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_shows3
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _me_tracks4
    {

        [System.Text.Json.Serialization.JsonPropertyName("ids")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Ids { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Tracks
    {

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Offset
    {

        [System.Text.Json.Serialization.JsonPropertyName("position")]
        public double Position { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("uri")]
        public string Uri { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum _me_following4Type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"artist")]
        Artist = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"user")]
        User = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum _me_following_containsType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"artist")]
        Artist = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"user")]
        User = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum _me_top_artistsTime_range
    {

        [System.Runtime.Serialization.EnumMember(Value = @"long_term")]
        Long_term = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"medium_term")]
        Medium_term = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"short_term")]
        Short_term = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum _me_top_tracksTime_range
    {

        [System.Runtime.Serialization.EnumMember(Value = @"long_term")]
        Long_term = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"medium_term")]
        Medium_term = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"short_term")]
        Short_term = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum _me_following6Type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"artist")]
        Artist = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"user")]
        User = 1,

    }



    [System.CodeDom.Compiler.GeneratedCode("NSwag", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ApiException : System.Exception
    {
        public int StatusCode { get; private set; }

        public string Response { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Exception innerException)
            : base(message + "\n\nStatus: " + statusCode + "\nResponse: \n" + ((response == null) ? "(null)" : response.Substring(0, response.Length >= 512 ? 512 : response.Length)), innerException)
        {
            StatusCode = statusCode;
            Response = response;
            Headers = headers;
        }

        public override string ToString()
        {
            return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "14.0.1.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ApiException<TResult> : ApiException
    {
        public TResult Result { get; private set; }

        public ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result, System.Exception innerException)
            : base(message, statusCode, response, headers, innerException)
        {
            Result = result;
        }
    }

}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603
#pragma warning restore 8604
#pragma warning restore 8625